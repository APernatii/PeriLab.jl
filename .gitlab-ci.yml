image: julia:latest

stages:
  - test
  - benchmark
  - deploy

before_script:
  # workaround for https://github.com/JuliaDocs/Documenter.jl/issues/686
  - apt-get -qq update; apt-get -y install git jq bc
  - julia --project=@. -e "import Pkg; Pkg.build()"

test:
  stage: test
  script:
    - julia --project=@. -e "import Pkg; Pkg.test(; coverage = true)"
    # - julia --project=test/coverage -e 'import Pkg; Pkg.instantiate()'
    # - julia --project=test/coverage test/coverage/coverage-summary.jl

    - julia -e 'import Pkg; Pkg.add("Coverage");
      using Coverage; cl, tl = get_summary(process_folder());
      println("(", cl/tl*100, "%) covered")'
  coverage: '/\(\d+.\d+\%\) covered/'

benchmark:
  stage: benchmark
  variables:
    DEPLOY_CURL_COMMAND: 'curl -o benchmark_old_results.json --header "PRIVATE-TOKEN: glpat-imAENnk33mhBQycGWMNb" "https://gitlab.com/api/v4/projects/50476615/jobs/artifacts/main/raw/benchmark_results.json?job=benchmark"'
  script:
    - julia -e 'import Pkg; Pkg.add(path=".")'
    - julia --project=. test/benchmarks/benchmark.jl
    - 'eval "$DEPLOY_CURL_COMMAND"'
    - value_old_ns=$(jq -r '.total_time_ns' benchmark_old_results.json)
    - value_new_ns=$(jq -r '.total_time_ns' benchmark_results.json)
    - value_old_s=$(echo "$value_old_ns / 1000000000" | bc)
    - value_new_s=$(echo "$value_new_ns / 1000000000" | bc)
    - diff=$(echo "$value_old_s - $value_new_s" | bc)
    - if [ "$value_old_s" < "$value_new_s" ]; then
      echo "Benchmark is $diff [s] slower";
      exit 1;
      else
      echo "Benchmark is $diff [s] faster";
      fi
  artifacts:
    paths:
      - benchmark_results.json
  allow_failure:
    exit_codes:
      - 1

pages:
  stage: deploy
  script:
    - julia --project=docs -e 'using Pkg; Pkg.instantiate(); Pkg.develop(PackageSpec(path=pwd()))'
    - julia --project=docs --color=yes docs/make.jl
    - mv docs/build public # move to the directory picked up by Gitlab pages
  artifacts:
    paths:
      - public
  only:
    - main
